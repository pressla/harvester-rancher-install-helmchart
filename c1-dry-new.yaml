NAME: c1
LAST DEPLOYED: Thu Mar  6 17:27:03 2025
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: rke2-cluster/templates/rke2_cp_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: c1-cp-0-cloudinit
  namespace: default
stringData:
  userdata: |
    #cloud-config
    package_update: true
    packages:
      - qemu-guest-agent
    write_files:
    - content: "apiVersion: helm.cattle.io/v1\nkind: HelmChart\nmetadata:\n  name: cert-manager\n
        \ namespace: default      \nspec:\n  bootstrap: true\n  targetNamespace: cert-manager\n
        \ createNamespace: true\n  valuesContent: |-\n    securityContext:\n      runAsNonRoot:
        true\n    crds:\n      enabled: true\n  version: v1.16.1\n  repo: https://charts.jetstack.io\n
        \ chart: cert-manager\n"
      owner: root
      path: /var/lib/rancher/rke2/server/manifests/certmanager.yaml
    - content: "apiVersion: helm.cattle.io/v1\nkind: HelmChart\nmetadata:\n  name: rancher\n
        \ namespace: default      \nspec:\n  bootstrap: false\n  targetNamespace: cattle-system\n
        \ createNamespace: true\n  set:\n    hostname: rancher.lab.sienarfleet.systems\n
        \   replicas: 3\n    bootstrapPassword: admin\n  valuesContent: |-\n    global:\n
        \     cattle:\n        psp:\n          enabled: false\n    ingress:\n      tls:\n
        \       source: rancher\n  repo: https://releases.rancher.com/server-charts/stable\n
        \ chart: rancher\n  version: v2.10.1\n"
      owner: root
      path: /var/lib/rancher/rke2/server/manifests/rancher.yaml
    - path: /etc/rancher/rke2/config.yaml
      owner: root
      content: |
        token: insecuretoken
        system-default-registry: 
        tls-san:
          - c1-cp-0
          - 10.2.0.20
        secrets-encryption: true
        write-kubeconfig-mode: 0640
        use-service-account-credentials: true
    - path: /etc/hosts
      owner: root
      content: |
        127.0.0.1 localhost
        127.0.0.1 c1-cp-0
    runcmd:
    - - systemctl
      - enable
      - '--now'
      - qemu-guest-agent.service
    - mkdir -p /var/lib/rancher/rke2-artifacts && wget https://get.rke2.io -O /var/lib/rancher/install.sh && chmod +x /var/lib/rancher/install.sh
    - INSTALL_RKE2_VERSION=v1.29.6+rke2r1 /var/lib/rancher/install.sh
    - systemctl enable rke2-server.service
    - useradd -r -c "etcd user" -s /sbin/nologin -M etcd -U
    - systemctl start rke2-server.service
    ssh_authorized_keys: 
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD9Ly8LmH8MrtClJMHJacoPGxoD3UKAfBsPNSahwoKuh71hV4CRvzk/OevQYtIp+NQRcY6fiM7dukKpGbiGq5J8+TGX2X884WWnRZIBmOGze1YBJ76qpuHOKr5e8fAPIoBj7xV44n+jppR63BHC88E07ziJtZl4wTyplFNpbp8mviz6hlnNdjvoI5zvrQ0CkFpPjEHaPM1KlHRkeXy6q7L/KbOIT2WhLnsu2iiwZ/4Y5aE27rMMX0CJ/xzm9dEPXWH0BF5ToY3iJvc723tgH6FbZKYeRMk36uDuyo8SG716myldvCMrvwzl6V9389TROlivmsilqh8rL/uO3XfPh7RF alex@R1
  networkdata: ""
---
# Source: rke2-cluster/templates/rke2_cp_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: c1-cp-1-cloudinit
  namespace: default
stringData:
  userdata: |
    #cloud-config
    package_update: true
    packages:
      - qemu-guest-agent
    write_files:
    - content: "apiVersion: helm.cattle.io/v1\nkind: HelmChart\nmetadata:\n  name: cert-manager\n
        \ namespace: default      \nspec:\n  bootstrap: true\n  targetNamespace: cert-manager\n
        \ createNamespace: true\n  valuesContent: |-\n    securityContext:\n      runAsNonRoot:
        true\n    crds:\n      enabled: true\n  version: v1.16.1\n  repo: https://charts.jetstack.io\n
        \ chart: cert-manager\n"
      owner: root
      path: /var/lib/rancher/rke2/server/manifests/certmanager.yaml
    - content: "apiVersion: helm.cattle.io/v1\nkind: HelmChart\nmetadata:\n  name: rancher\n
        \ namespace: default      \nspec:\n  bootstrap: false\n  targetNamespace: cattle-system\n
        \ createNamespace: true\n  set:\n    hostname: rancher.lab.sienarfleet.systems\n
        \   replicas: 3\n    bootstrapPassword: admin\n  valuesContent: |-\n    global:\n
        \     cattle:\n        psp:\n          enabled: false\n    ingress:\n      tls:\n
        \       source: rancher\n  repo: https://releases.rancher.com/server-charts/stable\n
        \ chart: rancher\n  version: v2.10.1\n"
      owner: root
      path: /var/lib/rancher/rke2/server/manifests/rancher.yaml
    - path: /etc/rancher/rke2/config.yaml
      owner: root
      content: |
        token: insecuretoken
        server: https://10.2.0.20:9345
        system-default-registry: 
        tls-san:
          - c1-cp-1
          - 10.2.0.20
        secrets-encryption: true
        write-kubeconfig-mode: 0640
        use-service-account-credentials: true
    - path: /etc/hosts
      owner: root
      content: |
        127.0.0.1 localhost
        127.0.0.1 c1-cp-1
    runcmd:
    - - systemctl
      - enable
      - '--now'
      - qemu-guest-agent.service
    - mkdir -p /var/lib/rancher/rke2-artifacts && wget https://get.rke2.io -O /var/lib/rancher/install.sh && chmod +x /var/lib/rancher/install.sh
    - INSTALL_RKE2_VERSION=v1.29.6+rke2r1 /var/lib/rancher/install.sh
    - systemctl enable rke2-server.service
    - useradd -r -c "etcd user" -s /sbin/nologin -M etcd -U
    - systemctl start rke2-server.service
    ssh_authorized_keys: 
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD9Ly8LmH8MrtClJMHJacoPGxoD3UKAfBsPNSahwoKuh71hV4CRvzk/OevQYtIp+NQRcY6fiM7dukKpGbiGq5J8+TGX2X884WWnRZIBmOGze1YBJ76qpuHOKr5e8fAPIoBj7xV44n+jppR63BHC88E07ziJtZl4wTyplFNpbp8mviz6hlnNdjvoI5zvrQ0CkFpPjEHaPM1KlHRkeXy6q7L/KbOIT2WhLnsu2iiwZ/4Y5aE27rMMX0CJ/xzm9dEPXWH0BF5ToY3iJvc723tgH6FbZKYeRMk36uDuyo8SG716myldvCMrvwzl6V9389TROlivmsilqh8rL/uO3XfPh7RF alex@R1
  networkdata: ""
---
# Source: rke2-cluster/templates/rke2_cp_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: c1-cp-2-cloudinit
  namespace: default
stringData:
  userdata: |
    #cloud-config
    package_update: true
    packages:
      - qemu-guest-agent
    write_files:
    - content: "apiVersion: helm.cattle.io/v1\nkind: HelmChart\nmetadata:\n  name: cert-manager\n
        \ namespace: default      \nspec:\n  bootstrap: true\n  targetNamespace: cert-manager\n
        \ createNamespace: true\n  valuesContent: |-\n    securityContext:\n      runAsNonRoot:
        true\n    crds:\n      enabled: true\n  version: v1.16.1\n  repo: https://charts.jetstack.io\n
        \ chart: cert-manager\n"
      owner: root
      path: /var/lib/rancher/rke2/server/manifests/certmanager.yaml
    - content: "apiVersion: helm.cattle.io/v1\nkind: HelmChart\nmetadata:\n  name: rancher\n
        \ namespace: default      \nspec:\n  bootstrap: false\n  targetNamespace: cattle-system\n
        \ createNamespace: true\n  set:\n    hostname: rancher.lab.sienarfleet.systems\n
        \   replicas: 3\n    bootstrapPassword: admin\n  valuesContent: |-\n    global:\n
        \     cattle:\n        psp:\n          enabled: false\n    ingress:\n      tls:\n
        \       source: rancher\n  repo: https://releases.rancher.com/server-charts/stable\n
        \ chart: rancher\n  version: v2.10.1\n"
      owner: root
      path: /var/lib/rancher/rke2/server/manifests/rancher.yaml
    - path: /etc/rancher/rke2/config.yaml
      owner: root
      content: |
        token: insecuretoken
        server: https://10.2.0.20:9345
        system-default-registry: 
        tls-san:
          - c1-cp-2
          - 10.2.0.20
        secrets-encryption: true
        write-kubeconfig-mode: 0640
        use-service-account-credentials: true
    - path: /etc/hosts
      owner: root
      content: |
        127.0.0.1 localhost
        127.0.0.1 c1-cp-2
    runcmd:
    - - systemctl
      - enable
      - '--now'
      - qemu-guest-agent.service
    - mkdir -p /var/lib/rancher/rke2-artifacts && wget https://get.rke2.io -O /var/lib/rancher/install.sh && chmod +x /var/lib/rancher/install.sh
    - INSTALL_RKE2_VERSION=v1.29.6+rke2r1 /var/lib/rancher/install.sh
    - systemctl enable rke2-server.service
    - useradd -r -c "etcd user" -s /sbin/nologin -M etcd -U
    - systemctl start rke2-server.service
    ssh_authorized_keys: 
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD9Ly8LmH8MrtClJMHJacoPGxoD3UKAfBsPNSahwoKuh71hV4CRvzk/OevQYtIp+NQRcY6fiM7dukKpGbiGq5J8+TGX2X884WWnRZIBmOGze1YBJ76qpuHOKr5e8fAPIoBj7xV44n+jppR63BHC88E07ziJtZl4wTyplFNpbp8mviz6hlnNdjvoI5zvrQ0CkFpPjEHaPM1KlHRkeXy6q7L/KbOIT2WhLnsu2iiwZ/4Y5aE27rMMX0CJ/xzm9dEPXWH0BF5ToY3iJvc723tgH6FbZKYeRMk36uDuyo8SG716myldvCMrvwzl6V9389TROlivmsilqh8rL/uO3XfPh7RF alex@R1
  networkdata: ""
---
# Source: rke2-cluster/templates/rke2_lb.yaml
apiVersion: loadbalancer.harvesterhci.io/v1beta1
kind: IPPool
metadata:
  name: c1-pool
spec:
  ranges:
    - gateway: 10.2.0.1
      rangeEnd: 10.2.0.20
      rangeStart: 10.2.0.20
      subnet: 10.2.0.0/24
  selector: {}
---
# Source: rke2-cluster/templates/rke2_lb.yaml
apiVersion: loadbalancer.harvesterhci.io/v1beta1
kind: LoadBalancer
metadata:
  name: c1-lb
  namespace: default
spec:
  healthCheck:
    failureThreshold: 2
    port: 6443
    successThreshold: 3
    timeoutSeconds: 5
    periodSeconds: 5
  ipam: pool
  ipPool: c1-pool
  listeners:
    - name: k8s-api
      port: 6443
      protocol: TCP
      backendPort: 6443
    - name: ingress
      port: 443
      protocol: TCP
      backendPort: 443
    - name: join
      port: 9345
      protocol: TCP
      backendPort: 9345
  workloadType: vm
  backendServerSelector:
    harvesterhci.io/vmName:
    - c1-cp-0
    - c1-cp-1
    - c1-cp-2
---
# Source: rke2-cluster/templates/rke2_cp_vm.yaml
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  namespace: default
  annotations:
    harvesterhci.io/volumeClaimTemplates: |
      [{"metadata":{"name":"c1-cp-disk-0","annotations":{"harvesterhci.io/imageId":"default/ubuntu","helm.app":"rke2"}},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"40Gi"}},"volumeMode":"Block","storageClassName":"longhorn"}}]
      
    network.harvesterhci.io/ips: '[]'
  labels:
    harvesterhci.io/creator: harvester
    harvesterhci.io/os: linux
  name: c1-cp-0
  finalizers:
    - harvesterhci.io/VMController.UnsetOwnerOfPVCs
spec:
  runStrategy: RerunOnFailure
  template:
    metadata:
      annotations: {}
      labels:
        harvesterhci.io/vmName: c1-cp-0
    spec:
      domain:
        machine:
          type: 'q35'
        cpu:
          cores: 3
          sockets: 1
          threads: 1
        devices:
          interfaces:
            - bridge: {}
              model: virtio
              name: default
          disks:
            - name: disk-0
              disk:
                bus: virtio
              bootOrder: 1
            - name: cloudinitdisk
              disk:
                bus: virtio
          hostDevices: []
        resources:
          limits:
            memory: 8Gi
            cpu: 3
        features:
          acpi:
            enabled: true
        firmware:
          bootloader:
            efi:
              secureBoot: false
      evictionStrategy: LiveMigrateIfPossible
      hostname: c1-cp-0
      networks:
        - name: default
          pod: {}
      volumes:
        - name: disk-0
          persistentVolumeClaim:
            claimName: c1-cp-disk-0
        - name: cloudinitdisk
          cloudInitNoCloud:
            secretRef:
              name: c1-cp-0-cloudinit
            networkDataSecretRef:
              name: c1-cp-0-cloudinit
      affinity: {}
      terminationGracePeriodSeconds: 120
---
# Source: rke2-cluster/templates/rke2_cp_vm.yaml
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  namespace: default
  annotations:
    harvesterhci.io/volumeClaimTemplates: |
      [{"metadata":{"name":"c1-cp-disk-1","annotations":{"harvesterhci.io/imageId":"default/ubuntu","helm.app":"rke2"}},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"40Gi"}},"volumeMode":"Block","storageClassName":"longhorn"}}]
      
    network.harvesterhci.io/ips: '[]'
  labels:
    harvesterhci.io/creator: harvester
    harvesterhci.io/os: linux
  name: c1-cp-1
  finalizers:
    - harvesterhci.io/VMController.UnsetOwnerOfPVCs
spec:
  runStrategy: RerunOnFailure
  template:
    metadata:
      annotations: {}
      labels:
        harvesterhci.io/vmName: c1-cp-1
    spec:
      domain:
        machine:
          type: 'q35'
        cpu:
          cores: 3
          sockets: 1
          threads: 1
        devices:
          interfaces:
            - bridge: {}
              model: virtio
              name: default
          disks:
            - name: disk-0
              disk:
                bus: virtio
              bootOrder: 1
            - name: cloudinitdisk
              disk:
                bus: virtio
          hostDevices: []
        resources:
          limits:
            memory: 8Gi
            cpu: 3
        features:
          acpi:
            enabled: true
        firmware:
          bootloader:
            efi:
              secureBoot: false
      evictionStrategy: LiveMigrateIfPossible
      hostname: c1-cp-1
      networks:
        - name: default
          pod: {}
      volumes:
        - name: disk-0
          persistentVolumeClaim:
            claimName: c1-cp-disk-1
        - name: cloudinitdisk
          cloudInitNoCloud:
            secretRef:
              name: c1-cp-1-cloudinit
            networkDataSecretRef:
              name: c1-cp-1-cloudinit
      affinity: {}
      terminationGracePeriodSeconds: 120
---
# Source: rke2-cluster/templates/rke2_cp_vm.yaml
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  namespace: default
  annotations:
    harvesterhci.io/volumeClaimTemplates: |
      [{"metadata":{"name":"c1-cp-disk-2","annotations":{"harvesterhci.io/imageId":"default/ubuntu","helm.app":"rke2"}},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"40Gi"}},"volumeMode":"Block","storageClassName":"longhorn"}}]
      
    network.harvesterhci.io/ips: '[]'
  labels:
    harvesterhci.io/creator: harvester
    harvesterhci.io/os: linux
  name: c1-cp-2
  finalizers:
    - harvesterhci.io/VMController.UnsetOwnerOfPVCs
spec:
  runStrategy: RerunOnFailure
  template:
    metadata:
      annotations: {}
      labels:
        harvesterhci.io/vmName: c1-cp-2
    spec:
      domain:
        machine:
          type: 'q35'
        cpu:
          cores: 3
          sockets: 1
          threads: 1
        devices:
          interfaces:
            - bridge: {}
              model: virtio
              name: default
          disks:
            - name: disk-0
              disk:
                bus: virtio
              bootOrder: 1
            - name: cloudinitdisk
              disk:
                bus: virtio
          hostDevices: []
        resources:
          limits:
            memory: 8Gi
            cpu: 3
        features:
          acpi:
            enabled: true
        firmware:
          bootloader:
            efi:
              secureBoot: false
      evictionStrategy: LiveMigrateIfPossible
      hostname: c1-cp-2
      networks:
        - name: default
          pod: {}
      volumes:
        - name: disk-0
          persistentVolumeClaim:
            claimName: c1-cp-disk-2
        - name: cloudinitdisk
          cloudInitNoCloud:
            secretRef:
              name: c1-cp-2-cloudinit
            networkDataSecretRef:
              name: c1-cp-2-cloudinit
      affinity: {}
      terminationGracePeriodSeconds: 120

